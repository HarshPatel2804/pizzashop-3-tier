@{
    Layout = "_OrderAppLayout";
    ViewData["Title"] = "OrderAppTable";
}
@await Html.PartialAsync("_Toast")
<style>
    .status-dot {
        display: inline-block;
        width: 10px;
        height: 10px;
        border-radius: 50%;
        margin-right: 5px;
    }

    .available {
        background-color: #dee2e6;
    }

    .selected {
        background-color: #a3e635;
    }

    .assigned {
        background-color: #22c55e;
    }

    .running {
        background-color: #7dd3fc;
    }

    .table-card {
        border-radius: 6px;
        padding: 12px;
        height: 140px;
        width: 300px;
        margin-right: 5px;
    }

    .selected-table {
        border: 2px solid #28a745 !important;
        box-shadow: 0 0 0 1px #28a745 !important;
    }

    .table-blue {
        background-color: rgba(30, 150, 250, 0.13);
        border: 2px solid rgba(30, 150, 250, 0.3);
    }

    .table-green {
        background-color: rgba(70, 190, 80, 0.13);
        border: 2px solid rgba(70, 190, 80, 0.3);
    }

    .table-gray {
        background-color: rgba(233, 236, 239, 0.4);
        border: 2px solid rgba(233, 236, 239, 0.9);
    }

    .accordion-button:focus {
        box-shadow: none;
    }
</style>
<div class="container-fluid py-4">
    <div class="d-flex justify-content-between align-items-center mb-3 ms-3 me-3">
        <div class="h3 text-color" style="font-weight: bold;">Table View</div>
        <div class="d-flex flex-wrap gap-3">
            <div><span class="status-dot available"></span> Available</div>
            <div><span class="status-dot selected"></span> Selected</div>
            <div><span class="status-dot assigned"></span> Assigned</div>
            <div><span class="status-dot running"></span> Running</div>
        </div>
    </div>

    <div class="accordion mb-4 ms-3 me-3" id="floorAccordion">

    </div>

    <div id="WaitingToken">

    </div>

    <div id="AssignModal">

    </div>
</div>

<style>
    .accordion .accordion-button::after {
        order: -1;
        margin-left: 0;
        width: 24px;
        height: 24px;
        display: flex;
        align-items: center;
        justify-content: center;
        border: 1px solid #bcb9b4;
        border-radius: 50%;
        padding: 5px;

    }

    .accordion .accordion-button:not(.collapsed)::after {
        border-color: #3083b7;
    }

    .accordion {
        --bs-accordion-btn-icon: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-5 -5 24 24' fill='none' stroke='%23bcb9b4' stroke-linecap='round' stroke-linejoin='round'%3e%3cpath d='M5 2L11 8L5 14'/%3e%3c/svg%3e");
        --bs-accordion-btn-active-icon: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-5 -5 24 24' fill='none' stroke='%233083b7' stroke-linecap='round' stroke-linejoin='round'%3e%3cpath d='M5 2L11 8L5 14'/%3e%3c/svg%3e");
        --bs-accordion-btn-icon-transform: rotate(+90deg);
        --bs-accordion-btn-focus-box-shadow: none;
    }

    .accordion-button:not(.collapsed) {
        background-color: transparent !important;
        box-shadow: none !important;
    }
</style>
<script>
    $(document).ready(function () {
        $('.accordion').each(function () {
            var accordion = $(this);
            accordion.find('.accordion-item').each(function () {
                var item = $(this);
                var header = item.find('.accordion-header');
                var button = header.find('.accordion-button');
                var target = button.attr('data-bs-target');
                var content = $(target);

                button.on('click', function () {
                    if (content.hasClass('show')) {
                        content.removeClass('show');
                        button.addClass('collapsed');
                        button.attr('aria-expanded', 'false');
                    } else {
                        content.addClass('show');
                        button.removeClass('collapsed');
                        button.attr('aria-expanded', 'true');
                    }
                });
            });
        });
    });
</script>
<script>
    $(document).ready(function () {

        function sectionList() {
            $.ajax({
                url: '/OrderTable/Sections',
                type: 'GET',
                success: function (data) {
                    $('#floorAccordion').html(data);

                    $('.accordion-button').addClass('collapsed').attr('aria-expanded', 'false');
                    $('.accordion-collapse').removeClass('show');
                    afterLoadSection();
                }

            });
        };
        sectionList();

        function WaitingList() {
            $("#addWaitingTokenForm").submit(function (e) {
                e.preventDefault();
                console.log("submitted");

                if ($('#addWaitingTokenForm').valid()) {
                    var formData = new FormData($("#addWaitingTokenForm")[0]);

                    $.ajax({
                        url: "/OrderTable/AddWaitingToken",
                        type: "POST",
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function (response) {
                            if (response.success) {
                                $("#waitingToken").modal("hide");
                            }
                            else {
                                toastr.error(response.message);
                            }
                        }
                    });
                }
            });
        }
        let selectedTablesPerSection = {};
        function afterLoadSection() {

            $(document).on("click", "#SaveToken", function () {
                console.log("clicked");
                var section = $(this).data("id");
                $.ajax({
                    url: "/OrderTable/AddWaitingToken",
                    type: "GET",
                    data: { section: section },
                    success: function (response) {
                        $("#WaitingToken").html(response);
                        $("#waitingToken").modal("show");
                        WaitingList();
                    }
                });
            });

            $(document).ready(function () {
                $('.assign-btn').prop('disabled', true);

                selectedTablesPerSection = {};

                $(document).on('click', '.table-card', function () {

                    const tableId = $(this).data('table-id');
                    const sectionId = $(this).closest('.accordion-item').find('.assign-btn').data('id');

                    if ($(this).hasClass('table-gray')) {
                        if (!selectedTablesPerSection[sectionId]) {
                            selectedTablesPerSection[sectionId] = [];
                        }

                        if ($(this).hasClass('selected-table')) {
                            $(this).removeClass('selected-table');
                            selectedTablesPerSection[sectionId] = selectedTablesPerSection[sectionId].filter(id => id !== tableId);
                        } else {
                            $(this).addClass('selected-table');
                            selectedTablesPerSection[sectionId].push(tableId);
                        }

                        $(`.assign-btn[data-id="${sectionId}"]`).prop('disabled',
                            selectedTablesPerSection[sectionId].length === 0);
                    }
                    else {
                        const orderId = $(this).data('order-id');

                        if (orderId) {
                            const redirectUrl = `/OrderMenu/Menu?orderId=${orderId}`;

                            window.location.href = redirectUrl;

                        }
                    }
                });

                $('#AssignModal').on('submit', '#AssignTableForm', function (e) {
                    e.preventDefault();
                    console.log("Assign Table");

                    let selectedTableIds = [];
                    selectedTableIds = JSON.parse($('#selectedTableIds').val() || '[]');
                    console.log(selectedTableIds);

                    if ($(this).valid()) {

                        const formData = {
                            Email: $('#Email').val(),
                            Customername: $('#Name').val(),
                            Phoneno: $('#mobile').val(),
                            Noofpeople: parseInt($('#NoOfPerson').val()) || 0,
                            selectedTableIds: selectedTableIds
                        };

                        const waitingTokenId = $('#waitingTokenId').val();
                        if (waitingTokenId) {
                            formData.Waitingtokenid = parseInt(waitingTokenId);
                        }

                        $.ajax({
                            url: '/OrderTable/AssignTable',
                            type: 'POST',
                            contentType: 'application/json',
                            data: JSON.stringify(formData),
                            dataType: 'json',
                            success: function (response) {
                                if (response.success) {
                                    var offcanvasElement = document.getElementById('AssignTableModal');
                                    var bsOffcanvas = bootstrap.Offcanvas.getInstance(offcanvasElement);
                                    bsOffcanvas.hide();
                                    var orderId = response.orderid;

                                    selectedTableIds.forEach(function (tableId) {
                                        var table = $(`.table-card[data-table-id="${tableId}"]`);
                                        console.log(table);
                                        table.data('orderid', orderId);
                                    });

                                    const redirectUrl = `/OrderMenu/Menu?orderId=${orderId}`;
                                    window.location.href = redirectUrl;
                                    toastr.clear();
                                    toastr.success('Table assigned successfully');
                                } else {
                                    toastr.clear();
                                    toastr.error(response.message || 'Failed to assign table');
                                }
                            }
                        });
                    }
                });

    @* $('.accordion-collapse').on('hidden.bs.collapse', function () {
                    const sectionId = $(this).closest('.accordion-item').find('.assign-btn').data('id');

                    if (selectedTablesPerSection[sectionId]) {
                        selectedTablesPerSection[sectionId].forEach(tableId => {
                    $(`[data-table-id="${tableId}"]`).removeClass('selected-table');
                    });

                        selectedTablesPerSection[sectionId] = [];

                    $(`.assign-btn[data-id="${sectionId}"]`).prop('disabled', true);
                    }
                    });  *@
            });
        }

        $(document).on('click', '.assign-btn', function () {
            const sectionIdsWithSelections = Object.keys(selectedTablesPerSection)
                .filter(secId => selectedTablesPerSection[secId] && selectedTablesPerSection[secId].length > 0)
                .map(secId => parseInt(secId));
            const selectedTables = [];
            $('.accordion-item').find('.table-card.selected-table').each(function () {
                selectedTables.push($(this).data('table-id'));
            });

            const selectedTableIds = JSON.stringify(selectedTables);
            console.log(sectionIdsWithSelections);
            $.ajax({
                url: "/OrderTable/GetWaitingDetails",
                type: "GET",
                data: { section: sectionIdsWithSelections },
                traditional: true,
                success: function (response) {
                    $("#AssignModal").html(response);
                    $("#selectedTableIds").val(selectedTableIds);
                    sectionIdsWithSelections.forEach(function (sectionId) {
                        $('#' + sectionId).prop('checked', true);
                    });

                    var dropdownBtn = $('#sectionDropdownBtn');

                    if (sectionIdsWithSelections.length === 0) {
                        
                        dropdownBtn.text('Select Sections');
                    } else if (sectionIdsWithSelections.length === 1) {
                        dropdownBtn.text($('#'+sectionIdsWithSelections[0]).data('name'));
                    } else {
                        var firstSectionText = $('#'+sectionIdsWithSelections[0]).data('name');
                        var othersCount = sectionIdsWithSelections.length - 1;
                        dropdownBtn.text(firstSectionText + ' +' + othersCount);
                    }

                    $('.section-checkbox').prop('disabled', true);
                    var offcanvasElement = document.getElementById('AssignTableModal');
                    var bsOffcanvas = new bootstrap.Offcanvas(offcanvasElement);
                    bsOffcanvas.show();
                }
            });
        });


    });
</script>
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>