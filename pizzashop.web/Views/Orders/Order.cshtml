@using pizzashop.repository.Models;
@{
    Layout = "_Layout";
    ViewData["Title"] = "Dashboard Page";
}
@model pizzashop.repository.ViewModels.OrderViewModel
<section style="min-height: 100vh; background-color: #fafafa; overflow-x: hidden;">
<div class="Orderlist">
    <div class="row mb-2">
        <div class="col-xl col-12">
            <div class="h1 mt-3" style="color: rgb(1, 123, 217); font-weight: bold">
                Orders
            </div>
        </div>
        <div class="col-xl-2 col-12 mt-3 d-flex align-items-center">
            <input id="searchInput" type="search" class="form-control form-control-lg w-100" placeholder="Search"
                style="height: 55px !important;" />
        </div>
        <div class="col-xl-3 col-12 mt-3 d-flex align-items-center">
            <select class="form-select w-100" asp-for="OrderStatus" id="Status-Search"
                aria-label="Floating label select example" style="height: 55px;">
                <option value="0" selected>All Status</option>
                @foreach (var type in
                Enum.GetValues(typeof(orderstatus)).Cast<orderstatus>())
                {
                    <option value="@((int)type)">
                        @type.ToString()
                    </option>
                }
            </select>
        </div>
        <div class="col-xl-3 col-12 mt-3 d-flex align-items-center">
            <select class="form-select w-100" id="Time-Search" aria-label="Item type" style="height: 55px;" required>
                <option value="0" selected>All Times</option>
                <option value="1">Last 7 Days</option>
                <option value="2">Last 30 Days</option>
                <option value="3">Current Month</option>
                <option value="4">Custom Date</option>
            </select>
        </div>
        <div class="col-xl-auto col-12 mt-3 d-flex align-items-center justify-content-start me-3" style="height: 55px;">
            <a class="text-decoration-none text-white" id="exportButton"><button class="btn btn-lg btn-color"><img
                        src="~/images/icons/export.svg"
                        style="filter: brightness(0) invert(1); width: 24px; height: 24px;" alt=""
                        class="mb-1 me-1">Export
                </button></a>
        </div>
    </div>
    <div class="row mb-2">
        <div class="col-xl-auto col-12 mt-3 d-flex align-items-center justify-content-md-end justify-content-center ms-auto">
            <div class="form-floating w-100" style="min-width: 360px;">
                <input type="date" class="form-control" id="fromDate">
                <label for="fromDateInput">From Date</label>
            </div>
        </div>
        <div class="col-xl-auto col-12 mt-3 d-flex align-items-center justify-content-md-start justify-content-center">
            <div class="form-floating w-100" style="min-width: 360px;">
                <input type="date" class="form-control" id="toDate">
                <label for="toDateInput">To Date</label>
            </div>
        </div>
        <div class="col-xl-auto col-12 mt-3 d-flex align-items-center justify-content-start me-3    ">
            <a class="text-decoration-none text-white me-2" id="searchButton"><button
                    class="btn btn-lg btn-color">Search
                </button></a>
            <a class="text-decoration-none text-white" id="clearButton"><button
                    class="btn btn-lg btn-border-color">Clear
                </button></a>
        </div>
    </div>
    <div class="row mt-5 mx-md-3 mx-2 table-responsive bg-white shadow" id="OrderListContainer">

    </div>
</div>
<div id="viewOrder" class="d-none">

</div>
</section>
<script>
    $(document).ready(function () {
        let searchQuery = "@ViewBag.SearchQuery" || "";
        let sortColumn = "";
        let sortOrder = "asc";
        const $fromDate = $('#fromDate');
        const $toDate = $('#toDate');
        let today = new Date().toISOString().slice(0, 10);
        $toDate.attr('max', today);
        $fromDate.attr('max', today);
        const $timeSearch = $('#Time-Search');

        $fromDate.on('change', function () {
            const fromVal = $(this).val();
             $timeSearch.val('4');
            if (fromVal) {
                $toDate.attr('min', fromVal);
            } else {
                $toDate.removeAttr('min');
            }
        });

        $toDate.on('change', function () {
            const toVal = $(this).val();
             $timeSearch.val('4');
            if (toVal) {
                $fromDate.attr('max', toVal);
            } else {
                $fromDate.removeAttr('max');
            }
        });

        function loadOrderTable(page) {
            let pageSize = $("#pageSizeSelect").val();
            let search = $("#searchInput").val();
            let status_search = $("#Status-Search").val();
            let fromDate = $("#fromDate").val();
            let toDate = $("#toDate").val();

            $.ajax({
                url: "/Orders/OrderList",
                type: "GET",
                data: { page: page, pageSize: pageSize, search: search, sortColumn: sortColumn, sortOrder: sortOrder, status: status_search, fromDate: fromDate, toDate: toDate },
                success: function (data) {
                    $("#OrderListContainer").html(data);
                },
                error: function () {
                    alert("Failed to load data.");
                }
            });
        }


        $(document).on("click", ".pagination-link", function (e) {
            e.preventDefault();
            let page = $(this).data("page");

            if (page > 0) {
                loadOrderTable(page);
            }
        });

        $(document).on("click", ".sortDiv", function (e) {
            if ($(this).find('.sort-icon').length > 0) {
                e.preventDefault();
                e.stopPropagation();

                const clickedColumn = $(this).find('.sort-icon').first().data("column");

                if (sortColumn === clickedColumn) {
                    sortOrder = sortOrder === "asc" ? "desc" : "asc";
                } else {
                    sortColumn = clickedColumn;
                    sortOrder = "asc";
                }
                console.log(sortColumn + " " + sortOrder);
                loadOrderTable(1);
            }
        });

        $(document).on("change", "#pageSizeSelect", function () {
            loadOrderTable(1);
        });

        $("#searchInput").on("input", function () {
            loadOrderTable(1);
        });

        $("#Status-Search").change(function () {
            loadOrderTable(1);
        });

        $("#Time-Search").change(function () {
            $toDate.removeAttr('min');
            const timeOption = $(this).val();
            const today = new Date();
            let fromDateValue = '';

            function formatDate(date) {
                const year = date.getFullYear();
                const month = String(date.getMonth() + 1).padStart(2, '0');
                const day = String(date.getDate()).padStart(2, '0');
                return `${year}-${month}-${day}`;
            }

            const toDateValue = formatDate(today);
            $("#toDate").val(toDateValue);

            switch (timeOption) {
                case "1": // Last 7 Days
                    const sevenDaysAgo = new Date(today);
                    sevenDaysAgo.setDate(today.getDate() - 7);
                    fromDateValue = formatDate(sevenDaysAgo);
                    break;

                case "2": // Last 30 Days
                    const thirtyDaysAgo = new Date(today);
                    thirtyDaysAgo.setDate(today.getDate() - 30);
                    fromDateValue = formatDate(thirtyDaysAgo);
                    break;

                case "3": // Current Month
                    const firstDayOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);
                    fromDateValue = formatDate(firstDayOfMonth);
                    break;

                case "0":
                    $("#fromDate").val('');
                    $("#toDate").val('');
                    loadOrderTable(1);
            }

            $("#fromDate").val(fromDateValue);

            loadOrderTable(1);
        });

        $(document).on("click", "#searchButton", function (e) {
            loadOrderTable(1);
        });

        $(document).on("click", "#clearButton", function (e) {
            $("#fromDate").val('');
            $("#toDate").val('');
            $("#searchInput").val('');
            $("#Status-Search").val(0);
            $("#Time-Search").val(0);
            loadOrderTable(1);
        });

        $("#exportButton").click(function () {
            var searchString = $("#searchInput").val();
            var status = $("#Status-Search").val();
            var fromDate = $("#fromDate").val();
            var toDate = $("#toDate").val();

            let url = `/Orders/ForExportExcel?searchString=${encodeURIComponent(searchString)}&status=${encodeURIComponent(status)}&fromDate=${encodeURIComponent(fromDate)}&toDate=${encodeURIComponent(toDate)}`;

            window.location.href = url;
        });

        $(document).on("click", ".view-order-btn", function(){
            let orderid = $(this).closest("tr").data("orderid");

            $.ajax({
                url: "/Orders/FororderView",
                type: "GET",
                data: { orderid: orderid },
                success: function (data) {
                    $("#viewOrder").html(data);
                    $("#viewOrder").removeClass("d-none");
                    $(".Orderlist").addClass("d-none");
                },
                error: function () {
                    alert("Failed to load data.");
                }
            });
        });

        loadOrderTable(1);

    });
</script>
<style>
    .btn-color {
        background-color: #0066a7;
        color: white;
    }

    .btn-color:hover {
        background-color: #025d96;
        color: white;
    }

    .btn-border-color {
        border: 1px solid #0066a7;
        color: #0066a7;
        background-color: transparent;
    }

    .btn-border-color:hover {
        border: 1px solid #0066a7;
        color: #0066a7;
        background-color: transparent;
    }
</style>